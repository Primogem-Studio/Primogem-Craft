plugins {
    id 'eclipse'
    id 'net.neoforged.moddev' version '2.0.95'
}

version = '1.0'
base.archivesName = "modid"

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = "21.1.176"

    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }

    runs {
        client {
            client()

            def mcreatorJvmOptions = System.getenv('MCREATOR_JVM_OPTIONS')
            if (mcreatorJvmOptions) {
                mcreatorJvmOptions.split("\\s+").findAll { it.trim() }.each { arg -> jvmArgument(arg)
                }
            }
        }
        server {
            server()
        }

        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }
    }

    mods {
        mcreator {
            sourceSet sourceSets.main
        }
    }
    accessTransformers {
        from "src/main/resources/pgc.at"
    }
}

repositories {
    exclusiveContent {
        forRepository {
            maven {
                url "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                url "https://raw.githubusercontent.com/hackermdch/maven-repo/master/repository"
            }
        }
        filter {
            includeGroup "com.tacz"
        }
    }
    maven { url "https://maven.shedaniel.me/" }
}

/* 
 * implementation = true 
 * compileOnly = false 
 */
dependencies {
    implementation "maven.modrinth:genshincraft:2.11.0"
    implementation "com.tacz:tacz-neoforge:1.1.6-hotfix-r5-hm"
    api "me.shedaniel:RoughlyEnoughItems-neoforge:16.0.799"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    dependsOn overwriteJava
}

tasks.register('overwriteJava', Copy) {
    from 'overwrite/src/main/java'
    into 'src/main/java'
}

apply from: 'mcreator.gradle'
